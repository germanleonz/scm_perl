.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Apache::XMLRPC 3"
.TH Apache::XMLRPC 3 "2002-08-02" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Apache::XMLRPC \- serve XML\-RPC requests from Apache
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 8
\&   ##
\&   ##  Directives for your Apache config file.
\&   ##
\&   <Location /RPC2>
\&      SetHandler perl\-script
\&      PerlHandler Apache::XMLRPC
\&      PerlSetVar XMLRPC_Config /usr/local/apache/xml\-rpc/services
\&   </Location>
\&
\&
\&   ##
\&   ##  In the \*(Aqservices\*(Aq file referenced above by \*(AqXMLRPC_Config\*(Aq
\&   ##
\&   sub foo {
\&      ...
\&   }
\&
\&   sub bar {
\&      ...
\&   }
\&
\&   $map = {
\&      foo   => \e&foo,
\&      bar   => \e&bar,
\&   };
\&
\&   1;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIApache::XMLRPC\fR serves Userland XML-RPC requests from Apache/mod_perl
using the Frontier::RPC2 module.
.PP
Configuring Apache::XMLRPC to work under mod_perl is a two step process.
First, you must declare a \f(CW\*(C`<Location>\*(C'\fR directive in your Apache
configuration file which tells Apache to use the content handler found in
the Apache::XMLRPC module and defines a variable which tells the module
where to find your services.  Then, you must define the services.
.SS "Apache Configuration"
.IX Subsection "Apache Configuration"
Apache configuration is as simple as the \f(CW\*(C`<Location>\*(C'\fR directive
shown in the synopsis above.  Any directive allowed by Apache inside a
\&\f(CW\*(C`<Location>\*(C'\fR block is allowed here, but the three lines shown
above are required.  Pay close attention to the 'PerlSetVar XMLRPC_Config
\&...' line as this is where you tell Apache where to find your services.
This file may reside anywhere accessable by Apache.
.SS "Defining Services"
.IX Subsection "Defining Services"
To actually define the XML-RPC routines that will be served, they \fImust\fR
reside in the file referenced by the 'PerlSetVar XMLRPC_Config ...'
directive in the Apache configuration file.  In this file you may place
as many Perl subroutines as you like, but only those which are explicitly
published will be available to your XML-RPC clients.
.PP
To \fIpublish\fR a subroutine, it must be included in the hash reference
named \f(CW$map\fR (the hash reference \fImust\fR have this name as this is the
variable that the \fIApache::XMLRPC\fR passes to \fIFrontier::RPC2::serve\fR
to actually service each request) The hash reference \fImust\fR be defined
in this \f(CW\*(C`services\*(C'\fR file.
.PP
The keys of the hash are the service names visible to the XML-RPC clients
while the hash values are references to the subroutines you wish to make
public.  There is no requirement that the published service names match
those of their associated subroutines, but it does make administration
a little easier.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1), \fIFrontier::RPC2\fR\|(3)
.PP
<http://www.scripting.com/frontier5/xml/code/rpc.html>
.SH "AUTHOR"
.IX Header "AUTHOR"
Ed Hill <ed\-hill@uiowa.edu> is the original author.
.PP
Tim Peoples <tep@colltech.com> added a few tweaks and all
the documenation.
